# Generated by Django 4.2.7 on 2025-10-11 14:32

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdminUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(blank=True, max_length=15, verbose_name='Teléfono')),
                ('role', models.CharField(choices=[('super_admin', 'Super Administrador'), ('admin', 'Administrador'), ('volunteer', 'Voluntario'), ('veterinarian', 'Veterinario')], default='volunteer', max_length=20, verbose_name='Rol')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='admin_profiles/', verbose_name='Foto de perfil')),
                ('is_active_session', models.BooleanField(default=False, verbose_name='Sesión activa')),
                ('last_activity', models.DateTimeField(auto_now=True, verbose_name='Última actividad')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='admin_users', related_query_name='admin_user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='admin_users', related_query_name='admin_user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario Administrador',
                'verbose_name_plural': 'Usuarios Administradores',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AdminActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Fecha de modificación')),
                ('action', models.CharField(choices=[('login', 'Iniciar sesión'), ('logout', 'Cerrar sesión'), ('create_pet', 'Crear mascota'), ('update_pet', 'Actualizar mascota'), ('delete_pet', 'Eliminar mascota'), ('approve_adoption', 'Aprobar adopción'), ('reject_adoption', 'Rechazar adopción'), ('create_content', 'Crear contenido'), ('update_content', 'Actualizar contenido')], max_length=20, verbose_name='Acción')),
                ('description', models.TextField(blank=True, verbose_name='Descripción')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='Dirección IP')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_logs', to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Log de actividad',
                'verbose_name_plural': 'Logs de actividad',
                'ordering': ['-created_at'],
            },
        ),
    ]
